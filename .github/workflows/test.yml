name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compatibility:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        nuxt: ["2.13", "2.14"]
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@master

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/*
            !.yarn/releases
            !.yarn/plugins
            !.yarn/sdks
            !.yarn/versions
          key: yarn-${{ runner.os }}-node-v${{ matrix.node }}-nuxt-${{ matrix.nuxt }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-v${{ matrix.node }}-yarn
            ${{ runner.os }}-yarn

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn && yarn workspace nuxt-typed-vuex add nuxt@${{ matrix.nuxt }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn add @babel/preset-env@~7.12.17

      - name: Test project
        run: yarn build && yarn test

  latest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/*
            !.yarn/releases
            !.yarn/plugins
            !.yarn/sdks
            !.yarn/versions
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Test project
        run: yarn build && yarn test

      - name: Coverage
        run: yarn codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
